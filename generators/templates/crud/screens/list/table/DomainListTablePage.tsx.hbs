import { Box, GenericTable, Head, Pagination } from "shared/ui";
import { Get{{pascalCase name}}sResponse } from "entidades/{{camelCase name}}/{{camelCase name}}.api";
import { use{{pascalCase name}}List } from "../{{camelCase name}}List.hook";
type {{pascalCase name}}ListTablePageProps = {
  data: Get{{pascalCase name}}sResponse;
  page: number;
};
const Text = ({ id, ...data }: any) => {
  return <h1 data-testid={"h1TestId" + id}>{data[id]}</h1>;
};
export const {{pascalCase name}}ListTablePage = ({ page = 0, data }: {{pascalCase name}}ListTablePageProps) => {
  const {
    {{camelCase name}}s,
    set{{pascalCase name}}s,
    handlePrefetch{{pascalCase name}},
    deleteSelectedAction,
    total,
    setPage,
  } = use{{pascalCase name}}List({
    page,
    initialData: data,
  });
  return (
    <>
      <Head
        title={"Belezix Admin | {{pascalCase label}}s"}
        description="Página de listagem de {{camelCase label}}s do painel de Admin Belezix"
      />
      <Box borderRadius={8} bg="purple.800" p="4" flexGrow="1">
        <GenericTable
          deleteSelectedAction={deleteSelectedAction}
          isLoading={false}
          items={ {{camelCase name}}s}
          fields={[
            { id: "name", label: "Nome", displayKeyText: true },
            {
              id: "createdAt",
              label: "Data de criação",
              displayKeyText: false,
              children: <Text />,
            },
          ]}
          setItems={set{{pascalCase name}}s}
          linkOnMouseEnter={handlePrefetch{{pascalCase name}} }
          error={undefined}
          route={"/{{camelCase name}}s"}
          routeDetails={"/{{camelCase name}}s/details"}
          routeCreate={"/{{camelCase name}}s/create"}
          routeList={"/{{camelCase name}}s/list"}
          title={"{{pascalCase label}}s"}
        />
        <Pagination
          onPageChange={setPage}
          currentPage={page}
          totalCountOfRegisters={total}
        />
      </Box>
    </>
  );
};
